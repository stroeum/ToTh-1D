function [T1,T2]=readBOLSIGoutput(filename)

%% Retrieve data

%% Create an empty table
cellVariableNames        = {};
cellVariableUnits        = {};
cellVariableDescriptions = {};
cellColNames             = {};

%filename='Earth.dat';
%% Read bolsig+ output
inFile = fopen(filename,'r');

tline = fgetl(inFile);
%disp(tline)
while (strcmp(tline,' Transport coefficients') == 0)
    tline = fgetl(inFile);
    %disp(tline)
end

tline = fgetl(inFile);
while (strcmp(tline(1),'A')==1)
    idx1 = strfind(tline,'  ');
    idx2 = strfind(tline,'(');
    
    header = tline(1:idx1(1)-1);
    if (isempty(idx2))
        variable = tline(idx1(1):end);
        unit = '()';
    else
        unit = strtrim(tline(idx2(1):end));
        variable = tline(idx1(1):idx2(1)-1);
    end
    
    variable = strtrim(variable);
    
    
    cellVariableNames{end+1} = header;
    cellVariableUnits{end+1} = unit;
    cellVariableDescriptions{end+1} = variable;
    %disp(header)
    %disp(variable)
    %disp(unit)
    tline = fgetl(inFile);
end

strtmp = strtrim(tline);
while(ischar(tline))
    if(strcmp(strtmp(1:2),'R#'))
        idx3=strfind(tline,'#');
        idx4=strfind(tline,'A');
        
        cellColNames{1} = strtrim(tline(1:idx3(1)-1));
        cellColNames{2} = strtrim(tline(idx3(1)+1:idx4(1)-1));
        if (strcmp(cellColNames{2},'E/N (Td)')==1)
            cellColNames{2} = 'EN_Td';
        end
        for k=1:length(idx4)-1
            cellColNames{end+1} = strtrim(tline(idx4(k):idx4(k+1)-1));
        end
        cellColNames{end+1} = strtrim(tline(idx4(k+1):end));
        break
        
    end 
end
% % cellVariableNames'
% % cellVariableUnits'
% % cellVariableDescriptions'
% % cellColNames'
% 
data=[];
% tline = fgetl(inFile);

while(length(tline)>1)
    C = [];
    tline = fgetl(inFile);
    word = allwords(tline,' ');
    for i=1:numel(word)
        l_word = length(word{i});
        if l_word>=4
            idx = l_word-3;
            if strcmp(num2str(word{i}(idx)),'-')
                word{i} = [word{i}(1:idx-1),'E',word{i}(idx:end)];
            end
        end
        C(i) = str2double(word{i});
    end
    clear word
    data = [data;C];
end
fclose(inFile);

%% Inverse rows/columns
T2 = array2table(data);
% for i=1:length(data)
%     data(i)
% end

T2.Properties.VariableNames = cellColNames;

for i=1:length(cellColNames)
    for j=1:length(cellVariableNames)
        if strcmp(cellColNames{i},cellVariableNames{j})==1
            T2.Properties.VariableDescriptions{i} = cellVariableDescriptions{j};
            T2.Properties.VariableUnits{i} = cellVariableUnits{j};
        end
    end
    if strcmp(cellColNames{i},'R')
        T2.Properties.VariableNames{i} = 'R';
        T2.Properties.VariableDescriptions{i} = 'Run #';
        T2.Properties.VariableUnits{i} = '()';
    end
    if strcmp(cellColNames{i},'EN_Td')
        T2.Properties.VariableNames{i} = 'EN';
        T2.Properties.VariableDescriptions{i} = 'Reduced electric field E/N';
        T2.Properties.VariableUnits{i} = '(Td)';
    end
end

[row2,col2]=size(T2);

%% Rearrange data into a consistent table
clear C cellColNames cellVariableNames cellVariableDescriptions cellVariableUnits data filename header header i idx1 idx2 idx3 idx4 inFile j k strtmp tline unit variable

data = zeros(row2,31);
T1 = array2table(data);

%% Column names
% cellVariableNames{1} = 'R';
% cellVariableNames{2} = 'EN';
% for i=1:29
%     cellVariableNames{end+1} = ['A',num2str(i)];
% end

cellVariableNames = {...
    'R',...
    'E_N',...
    'E',...
    'uxN',...
    'u_perp_xN',...
    'u_Hall_xN',...
    'u_bulk_xN',...
    'DxN',...
    'DLxN',...
    'DT_bulk_xN',...
    'DL_bulk_xN',...
    'uExN',...
    'DExN',...
    'vtot_N',...
    'vm_N',...
    'vei_N',...
    'viz_N',...
    'vat_N',...
    'alpha_N',...
    'eta_N',...
    'P_N',...
    'Pel_N',...
    'Pinel_N',...
    'P_growth_N',...
    'Pei_N',...
    'k_k',...
    'k_k_inv',...
    'K_k',...
    'Emax',...
    'iter',...
    'grid'};

%% Column description
cellVariableDescriptions = {...
    'Run #',...
    'Reduced electric field E/N',...
    'Mean energy',...
    'Mobility *N ',...
    'Real or perpendicular mobility *N',...
    'Imaginary or Hall mobility *N',...
    'Bulk mobility *N',...
    'Diffusion coefficient *N',...
    'Longitudinal diffusion coefficient *N',...
    'Bulk T diffusion coefficient *N',...
    'Bulk L diffusion coefficient *N',...
    'Energy mobility *N',...
    'Energy diffusion coef. D*N',...
    'Total collision freq. /N',...
    'Momentum frequency /N',...
    'e-i momentum frequency /N',...
    'Total ionization freq. /N',...
    'Total attachment freq. /N',...
    'Townsend ioniz. coef. alpha/N',...
    'Townsend attach. coef. eta/N',...
    'Power /N',...
    'Elastic power loss /N',...
    'Inelastic power loss /N',...
    'Growth power /N',...
    'e-i power loss /N',...
    'Rate coefficients',...
    'Inverse rate coefficients',...
    'Energy loss coefficients',...
    'Maximum energy',...
    '# of iterations',...
    '# of grid trials'...
};

%% Column units
cellVariableUnits = {...
    '()',...
    '(Td)',...
    '(eV)',...
    '(1/m/V/s)',...
    '(1/m/V/s)',...
    '(1/m/V/s)',...
    '(1/m/V/s)',...
    '(1/m/s)',...
    '(1/m/s)',...
    '(1/m/s)',...
    '(1/m/s)',...
    '(1/m/V/s)',...
    '(1/m/s)',...
    '(m3/s)',...
    '(m3/s)',...
    '(m3/s)',...
    '(m3/s)',...
    '(m3/s)',...
    '(m2)',...
    '(m2)',...
    '(eV m3/s)',...
    '(eV m3/s)',...
    '(eV m3/s)',...
    '(eV m3/s)',...
    '(eV m3/s)',...
    '(m3/s)',...
    '(m3/s)',...
    '(eV m3/s)',...
    '(eV)',...
    '()',...
    '()'...
};

T1.Properties.VariableNames = cellVariableNames;
T1.Properties.VariableDescriptions = cellVariableDescriptions;
T1.Properties.VariableUnits = cellVariableUnits;

[row1,col1]=size(T1);

for j1=1:col1
    for j2=1:col2
        for i2=1:row2
            if strcmp(T2.Properties.VariableDescriptions{j2},T1.Properties.VariableDescriptions{j1})
                %T1.Properties.VariableNames{j1}
                T1{i2,j1}=T2{i2,j2};
            end
        end
    end
    %if strcmp(T2.Properties.VariableNames{1},T1.Properties.Variable;
end

%[T.Properties.VariableNames', T.Properties.VariableDescriptions',T.Properties.VariableUnits']
% %summary(T)
end